import sys
import numpy as np

"""
1) Создайте numpy array my_array, элементами которого будут числа из
интервала [10, 70) с шагом 2. Выведите на экран результат.
"""
my_array: np.ndarray = np.arange(10, 70, 2)
# print(*my_array)


"""
2) Преобразуйте полученный my_array в матрицу A (6x5).
Транспонируйте матрицу A. Далее будем работать с
транспонированной матрицей A.
"""
A: np.ndarray = my_array.reshape(6, 5).T


"""
3) Умножьте все элементы матрицы на 2.5 и вычтете из каждого элемента
5 (в одной строке). Выведите новую матрицу на экран.
"""
A[:] = A * 2.5
A[0] = A[0] - 5
# np.savetxt(sys.stdout, A, fmt="%d")


"""
4) Создайте матрицу B (6x3) заполняя каждую ячейку случайным
действительным числом от 0 до 10. Выведите матрицу на экран.
"""
B: np.ndarray = np.random.randint(0, 10, (6, 3))
# np.savetxt(sys.stdout, B, fmt="%d")


"""
5) Получите вектор a, элементами которого являются суммы по всем
строкам матрицы A. Получите вектор b, элементами которого являются
суммы по всем столбцам матрицы B. Выведите на экран размеры
полученных векторов.
"""
a: np.ndarray = np.sum(A, axis=1).reshape(-1, 1)
# np.savetxt(sys.stdout, a, fmt="%d")
# print(a.shape)
b: np.ndarray = np.sum(B, axis=0)
# np.savetxt(sys.stdout, b, fmt="%d")
# print(b.shape)


"""
6) Вычислите произведение матриц A и B.
"""
# np.savetxt(sys.stdout, np.dot(A, B), fmt="%d")


"""
7) Удалите третий столбец из матрицы A. Добавьте три столбца из
случайных чисел от 10 до 20 к матрице B. На данном шаге у вас
должны получиться две квадратные матрицы A и B (5x5 и 6x6).
"""
# A.(2, axis=1)

